- name: CAF Terraform - Generate configuration files
  hosts: localhost
  vars:
    config_platform: "{{ lookup('file', '{{ platform_config_folder }}/{{scenario}}.caf.platform.yaml') | from_yaml }}"
    config_asvm: "{{ lookup('file', '{{ config_folder }}/{{scenario}}.caf.platform.yaml') | from_yaml }}"
    connectivity_virtual_wan: "{{ lookup('file', '{{ platform_config_folder }}/connectivity_virtual_wan.yaml') | from_yaml }}"
    connectivity_virtual_hub: "{{ lookup('file', '{{ platform_config_folder }}/connectivity_virtual_hub.yaml') | from_yaml }}"
    connectivity_firewall: "{{ lookup('file', '{{ platform_config_folder }}/connectivity_firewall.yaml') | from_yaml }}"
    connectivity_firewall_policies: "{{ lookup('file', '{{ platform_config_folder }}/connectivity_firewall_policies.yaml') | from_yaml }}"
    connectivity: "{{ lookup('file', '{{ platform_config_folder }}/connectivity.yaml') | from_yaml }}"
    identity: "{{ lookup('file', '{{ platform_config_folder }}/identity.yaml') | from_yaml }}"
    management: "{{ lookup('file', '{{ platform_config_folder }}/management.yaml') | from_yaml }}"
    subscriptions: "{{ lookup('file', '{{ platform_config_folder }}/subscriptions.yaml') | from_yaml }}"
    cidr: "{{ lookup('file', '{{ platform_config_folder }}/cidr.yaml') | from_yaml }}"
    tfstates: "{{ lookup('file', '{{ platform_config_folder }}/tfstates.yaml') | from_yaml }}"
    tfstates_asvm: "{{ lookup('file', '{{ config_folder }}/tfstates.yaml') | from_yaml }}"
    base_templates_folder: "{{ base_templates_folder }}"
    level: level3


  tasks:

# Get Platform subscriptions

    - name: "Get latest cache folder"
      set_fact:
        job_cache_base_path: "/home/vscode/.terraform.cache"

    - name: "Creates cache directory"
      file:
        path: "{{ job_cache_base_path }}/launchpad"
        state: directory

    - name: "Get platform subscriptions tfstate details"
      register: subscription_tfstate_file_name
      shell: |
        az storage account list \
          --subscription {{ config_platform.platform_core_setup.enterprise_scale.primary_subscription_details.subscription_id }} \
          --query "[?tags.caf_tfstate=='{{ tfstates.platform_subscriptions.level }}' && tags.caf_environment=='{{ config_platform.caf_terraform.launchpad.caf_environment }}'].{name:name}[0]" -o json | jq -r .name

    - debug:
        msg: "{{ subscription_tfstate_file_name.stdout }}"

    - name: "Download platform subscriptions tfstate details"
      shell: |
        az storage blob download \
          --name "{{ tfstates.platform_subscriptions.tfstate }}" \
          --account-name "{{ subscription_tfstate_file_name.stdout }}" \
          --container-name "tfstate" \
          --auth-mode "login" \
          --file "{{ job_cache_base_path }}/{{ tfstates.platform_subscriptions.tfstate }}"

    - name: "Get platform_subscriptions details"
      shell: "cat {{ job_cache_base_path }}/{{ tfstates.platform_subscriptions.tfstate }}"
      register: platform_subscriptions

    - name: "Get platform_subscriptions json data"
      set_fact:
        platform_sub_jsondata: "{{ platform_subscriptions.stdout | from_json }}"

    - name: "Get subscriptions list"
      set_fact:
        platform_subscriptions_details: "{{ platform_sub_jsondata | json_query(path) }}"
      vars: 
        path: 'outputs.objects.value.{{ tfstates.platform_subscriptions.lz_key_name }}.subscriptions'


# Get Platform keyvaults
    - name: "Get tfstate keyvauls account name"
      register: launchpad_storage_account
      shell: |
        az storage account list \
          --subscription {{ config_platform.platform_core_setup.enterprise_scale.primary_subscription_details.subscription_id }} \
          --query "[?tags.caf_tfstate=='{{ tfstates.launchpad.level }}' && tags.caf_environment=='{{ config_platform.caf_terraform.launchpad.caf_environment }}'].{name:name}[0]" -o json | jq -r .name
  
    - name: "Get tfstate keyvaults details"
      register: credentials_tfstate_exists
      ignore_errors: true
      shell: |
        az storage blob download \
          --name "{{ tfstates.launchpad_credentials.tfstate }}" \
          --account-name "{{ launchpad_storage_account.stdout }}" \
          --container-name "{{ tfstates.launchpad.workspace | default('tfstate') }}" \
          --auth-mode "login" \
          --file "~/.terraform.cache/launchpad/{{ tfstates.launchpad_credentials.tfstate }}"

    - name: "Get launchpad_credentials details"
      shell: "cat ~/.terraform.cache/launchpad/{{ tfstates.launchpad_credentials.tfstate }}"
      register: launchpad_credentials

    - name: "Get launchpad_credentials json data"
      set_fact:
        credjsondata: "{{ launchpad_credentials.stdout | from_json }}"

    - name: "Set keyvaults variable"
      set_fact:
        keyvaults: "{{ credjsondata | json_query(path) }}"
      vars: 
        path: 'outputs.objects.value.launchpad_credentials_rotation.keyvaults'

#
# Level 3
#

# asvm

    - name: List of asvm to process
      register: directories_to_process
      vars:
        base_folder: "asvm"
        level: "level3"
      find:
        paths: "{{ config_folder }}"
        recurse: yes
        file_type: directory

    - name: set asvm base_folder
      set_fact:
        base_folder_platform: "platform"
        level: "level3"

    - name: "{{ level }} | Azure Subscription Vending Machine (ASVM)"
      include_tasks: "{{ level }}/ansible.yaml"
      loop: "{{ directories_to_process.files if directories_to_process.files is iterable else []  | json_query('[*].path') }}"
      loop_control:
        loop_var: asvm_long_folder

#
# Linters
#

    - name: Terraform linter
      shell: |
        terraform fmt -recursive {{ config_platform.configuration_folders.platform.destination_base_path }}/{{ config_platform.configuration_folders.platform.destination_relative_path }}
        terraform fmt -recursive {{ config_asvm.configuration_folders.asvm.destination_base_path }}/{{ config_asvm.configuration_folders.asvm.destination_relative_path }}
