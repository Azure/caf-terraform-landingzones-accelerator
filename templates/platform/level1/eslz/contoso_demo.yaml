- name: ESLZ - Clean-up directory
  file:
    path: "{{ config.destination_install_path }}{{ config.destination_relative_base_path }}/{{ level }}/{{ base_folder }}"
    state: absent
  when:
    - config.cleanup_destination | bool

- name: Creates directory structure
  file:
    path: "{{ config.destination_install_path }}{{ config.destination_relative_base_path }}/{{ level }}/{{ base_folder }}/lib/{{ item.path }}"
    state: directory
  with_filetree: "{{ level }}/{{ base_folder }}/lib/{{ config.eslz.scenario }}/{{ config.eslz.private_lib.version_to_deploy }}"
  when: item.state == 'directory'

- name: ESLZ - Tfvars
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ config.destination_install_path }}{{ config.destination_relative_base_path }}/{{ level }}/{{ base_folder }}/{{ item | basename | regex_replace('.j2$', '') }}"
    force: yes
  with_fileglob:
    - "{{ level }}/{{ base_folder }}/*.j2"
    - "{{ level }}/{{ base_folder }}/*.md"

- name: ESLZ - Lib
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ config.destination_install_path }}{{ config.destination_relative_base_path }}/{{ level }}/{{ base_folder }}/lib/{{ item.path }}"
    force: yes
  with_filetree: "{{ level }}/{{ base_folder }}/lib/{{ config.eslz.scenario }}/{{ config.eslz.private_lib.version_to_deploy }}"
  when: item.state == 'file' and config.eslz.update_lib_folder

- name: ESLZ - overrides
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ config.destination_install_path }}{{ config.destination_relative_base_path }}/{{ level }}/{{ base_folder }}/{{ item | basename | regex_replace('.j2$', '') }}"
    force: yes
  with_fileglob:
    - "{{ level }}/{{ base_folder }}/lib/{{ config.eslz.scenario }}/{{ config.eslz.private_lib.version_to_deploy }}/*.j2"
    - "{{ level }}/{{ base_folder }}/lib/{{ config.eslz.scenario }}/{{ config.eslz.private_lib.version_to_deploy }}/*.md"
