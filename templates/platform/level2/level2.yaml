#
# Level 2 - Connectivity
#
- name: vwan
  hosts: localhost
  vars:
    config: "{{ lookup('file', '{{ config_folder }}/{{ model }}.yaml') | from_yaml }}"
    connectivity: "{{ lookup('file', '{{ config_folder }}/connectivity.yaml') | from_yaml }}"
    connectivity_virtual_wan: "{{ lookup('file', '{{ config_folder }}/connectivity_virtual_wan.yaml') | from_yaml }}"
    connectivity_virtual_hub: "{{ lookup('file', '{{ config_folder }}/connectivity_virtual_hub.yaml') | from_yaml }}"
    connectivity_firewall: "{{ lookup('file', '{{ config_folder }}/connectivity_firewall.yaml') | from_yaml }}"
    cidr: "{{ lookup('file', '{{ config_folder }}/cidr.yaml') | from_yaml }}"
    tfstates: "{{ lookup('file', '{{ config_folder }}/tfstates.yaml') | from_yaml }}"
    base_templates_folder: /tf/caf/templates/platform
    base_folder: connectivity
    level: level2
    folders:
      - virtual_wan


  tasks:
    - name: Creates {{ level }} directory
      file:
        path: "{{ config.destination_install_path }}{{ config.destination_relative_base_path }}/{{ level }}"
        state: directory

    - name: Creates {{ base_folder }} directory strcture
      file:
        path: "{{ config.destination_install_path }}{{ config.destination_relative_base_path }}/{{ base_folder }}"
        state: directory

    - name: Readme
      ansible.builtin.template:
        src: "{{ item }}"
        dest: "{{ config.destination_install_path }}{{ config.destination_relative_base_path }}/{{ level }}/{{ base_folder }}/{{ item | basename | regex_replace('.j2$', '') }}"
        force: yes
      with_fileglob:
        - "{{ base_folder }}/*.md"

    - name: Virtual Wan
      include_tasks: "{{ base_templates_folder }}/{{ level }}/{{ base_folder }}/{{ folder_name }}/{{ model }}.yaml"
      loop:
       - virtual_wan
      loop_control:
        loop_var: folder_name

    - name: virtual hubs
      include_tasks: "{{ base_templates_folder }}/{{ level }}/{{ base_folder }}/virtual_hub/{{ model }}.yaml"
      loop: "{{ tfstates.virtual_hubs.keys() }}"
      loop_control:
        loop_var: virtual_hub
