- name: "[{{ level }}-{{ base_folder }}] Clean-up directory"
  file:
    path: "{{ config.configuration_folders.destination_base_path }}{{ config.configuration_folders.destination_relative_path }}/{{ level }}/{{ base_folder }}"
    state: absent
  when: config.configuration_folders.cleanup_destination | bool

- name: "[{{ level }}-{{ base_folder }}] Creates directory"
  file:
    path: "{{ config.configuration_folders.destination_base_path }}{{ config.configuration_folders.destination_relative_path }}/{{ level }}/{{ base_folder }}"
    state: directory

- name: "[{{ level }}-{{ base_folder }}] generate configuration files."
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ config.configuration_folders.destination_base_path }}{{ config.configuration_folders.destination_relative_path }}/{{ level }}/{{ base_folder }}/{{ item | basename | regex_replace('.j2$', '') }}"
    force: yes
  with_fileglob:
    - "{{ level }}/{{ base_folder }}/*.tfvars.j2"

- name: "[{{ level }}-{{ base_folder }}] deploy."
  when: boostrap_launchpad | bool
  shell: |
    /tf/rover/rover.sh \
      -lz /tf/caf/landingzones/caf_solution \
      -var-folder {{ config.configuration_folders.destination_base_path }}{{ config.configuration_folders.destination_relative_path }}/{{ level }}/{{ base_folder }} \
      -tfstate_subscription_id {{ config.platform_core_setup.enterprise_scale.primary_subscription_details.subscription_id }} \
      -target_subscription {{ config.platform_core_setup.enterprise_scale.primary_subscription_details.subscription_id }} \
      -tfstate {{ tfstates.launchpad_credentials.tfstate }} \
      -launchpad \
      -log-severity {{ config.gitops.rover_log_error }} \
      -env {{ config.caf_terraform.launchpad.caf_environment }} \
      -level {{ level }} \
      -a apply
  args:
    warn: no

- name: "[{{ level }}-{{ base_folder }}] Get launchpad details"
  shell: cat ~/.terraform.cache/launchpad/terraform.tfstate
  register: remote_tfstate

- name: "[{{ level }}-{{ base_folder }}] Get json data"
  set_fact:
    jsondata: "{{ remote_tfstate.stdout | from_json }}"

- name: "[{{ level }}-{{ base_folder }}] set storage_account_name"
  set_fact:
    tfstate_launchpad_storage_account_name: "{{ jsondata | json_query(path) }}"
  vars: 
    path: 'backend.config.storage_account_name'

- name: "[{{ level }}-{{ base_folder }}] set container_name"
  set_fact:
    tfstate_launchpad_container_name: "{{ jsondata | json_query(path) }}"
  vars: 
    path: 'backend.config.container_name'

- name: "[{{ level }}-{{ base_folder }}] Get tfstate details"
  shell: |
    az storage blob download \
      --name "{{ tfstates.launchpad_credentials.tfstate }}" \
      --account-name "{{tfstate_launchpad_storage_account_name }}" \
      --container-name "{{ tfstate_launchpad_container_name }}" \
      --auth-mode "login" \
      --file "~/.terraform.cache/launchpad/{{ tfstates.launchpad_credentials.tfstate }}"

- name: "[{{ level }}-{{ base_folder }}] Get launchpad_credentials details"
  shell: "cat ~/.terraform.cache/launchpad/{{ tfstates.launchpad_credentials.tfstate }}"
  register: launchpad_credentials

- name: "[{{ level }}-{{ base_folder }}] Get launchpad_credentials json data"
  set_fact:
    credjsondata: "{{ launchpad_credentials.stdout | from_json }}"

- name: "[{{ level }}-{{ base_folder }}] set keyvaults"
  set_fact:
    keyvaults: "{{ credjsondata | json_query(path) }}"
  vars: 
    path: 'outputs.objects.value.launchpad_credentials_rotation.keyvaults'

- name: "[{{ level }}-{{ base_folder }}] cleanup"
  file:
    path: "~/.terraform.cache/launchpad/{{ tfstates.launchpad_credentials.tfstate }}"
    state: absent

- debug:
    msg: "{{ keyvaults.cred_subscription_creation_platform.vault_uri }}"

- name: "[{{ level }}-{{ base_folder }}] generate configuration files."
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ config.configuration_folders.destination_base_path }}{{ config.configuration_folders.destination_relative_path }}/{{ level }}/{{ base_folder }}/{{ item | basename | regex_replace('.j2$', '') }}"
    force: yes
  with_fileglob:
    - "{{ level }}/{{ base_folder }}/*.md"
