name: Deploy_Seccure_Aks_Baseline
# The pipeline is triggered on:
#  - PR/Issue comments "/deploy-all", "/deploy-lunchpad", "/deploy-foundation", "/deploy-networking",
#                      "/deploy-shared-services", "/deploy-aks"



on:
  issue_comment:
    types:
    - created

    
env:
  AZURE_CREDENTIALS: '{"clientId":"${{ secrets.SERVICE_PRINCIPAL }}", "clientSecret":"${{ secrets.SERVICE_PRINCIPAL_PWD }}", "subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}", "tenantId":"${{ secrets.TENANT }}"}' 
  event_sha: +refs/pull/${{ github.event.issue.number }}/merge
  ARM_CLIENT_ID: ${{ secrets.SERVICE_PRINCIPAL }}
  ARM_CLIENT_SECRET: ${{ secrets.SERVICE_PRINCIPAL_PWD }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}            
  ARM_TENANT_ID: ${{ secrets.TENANT }}
  PREFIX: ${{ secrets.RESOURCE_PREFIX }} 
  ENVIRONMENT: ${{ secrets.ENVIRONMENT }} 


jobs:
  deploy-lunchpad:
    runs-on: ubuntu-latest
    container:
      image:  aztfmod/rover:0.14.8-2103.1601
      options: --user 0
    steps:
      - name: Checkout Repository
        if: contains(github.event.comment.body, '/deploy-all') || contains(github.event.comment.body, '/deploy-lunchpad') || github.event_name != 'issue_comment'      
        uses: actions/checkout@v2
      - name: Checkout PR code
        if: contains(github.event.comment.body, '/deploy-all') || contains(github.event.comment.body, '/deploy-lunchpad')
        run: |
          git fetch origin ${{ env.event_sha }}
          git checkout FETCH_HEAD

      - name: Azure Login
        if: contains(github.event.comment.body, '/deploy-all') || contains(github.event.comment.body, '/deploy-lunchpad') || github.event_name != 'issue_comment'     
        uses: azure/login@v1
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}

      - name: Launchpad
        if: contains(github.event.comment.body, '/deploy-all') || contains(github.event.comment.body, '/deploy-lunchpad') || github.event_name != 'issue_comment'     
        run: |
          cp -rs ${GITHUB_WORKSPACE}/* /tf/caf && cp -r ${GITHUB_WORKSPACE}/.devcontainer /tf/caf/                 
          . /tf/caf/enterprise_scale/construction_sets/aks/scripts/launchpad.sh
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.15'        
      - name: Test
        if: contains(github.event.comment.body, '/deploy-all') || contains(github.event.comment.body, '/deploy-lunchpad') || github.event_name != 'issue_comment'     
        run: |
            cd /tf/caf/enterprise_scale/construction_sets/aks/test
            ./run_test.sh level0_launchpad/launchpad_test.go



  deploy-foundation: 
    runs-on: ubuntu-latest
    needs: deploy-lunchpad
    container:
      image:  aztfmod/rover:0.14.8-2103.1601
      options: --user 0
    steps:
      - name: Checkout Repository
        if: contains(github.event.comment.body, '/deploy-all') || contains(github.event.comment.body, '/deploy-foundation') || github.event_name != 'issue_comment'      
        uses: actions/checkout@v2
      - name: Checkout PR code
        if: contains(github.event.comment.body, '/deploy-all') || contains(github.event.comment.body, '/deploy-foundation')
        run: |
          git fetch origin ${{ env.event_sha }}
          git checkout FETCH_HEAD

      - name: Azure Login
        if: contains(github.event.comment.body, '/deploy-all') || contains(github.event.comment.body, '/deploy-foundation') || github.event_name != 'issue_comment'     
        uses: azure/login@v1
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}

      - name: Deploy
        if: contains(github.event.comment.body, '/deploy-all') || contains(github.event.comment.body, '/deploy-foundation') || github.event_name != 'issue_comment'           
        run: |
            cp -rs ${GITHUB_WORKSPACE}/* /tf/caf && cp -r ${GITHUB_WORKSPACE}/.devcontainer /tf/caf/            
            cd /tf/caf/enterprise_scale/construction_sets/aks
            ./scripts/deploy_level_with_rover.sh 1_foundation level1

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.15'        

      - name: Test
        if: contains(github.event.comment.body, '/deploy-all') || contains(github.event.comment.body, '/deploy-foundation') || github.event_name != 'issue_comment'           
        run: |
            cd /tf/caf/enterprise_scale/construction_sets/aks/test
            ./run_test.sh level1_foundation/level1_foundation_test.go

  deploy-shared-services: 
    runs-on: ubuntu-latest
    needs: deploy-foundation
    container:
      image:  aztfmod/rover:0.14.8-2103.1601
      options: --user 0
    steps:
      - name: Checkout Repository
        if: contains(github.event.comment.body, '/deploy-all') || contains(github.event.comment.body, '/deploy-shared-services') || github.event_name != 'issue_comment'      
        uses: actions/checkout@v2
      - name: Checkout PR code
        if: contains(github.event.comment.body, '/deploy-all') || contains(github.event.comment.body, '/deploy-shared-services')
        run: |
          git fetch origin ${{ env.event_sha }}
          git checkout FETCH_HEAD

      - name: Azure Login
        if: contains(github.event.comment.body, '/deploy-all') || contains(github.event.comment.body, '/deploy-shared-services') || github.event_name != 'issue_comment'     
        uses: azure/login@v1
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}

      - name: Deploy
        if: contains(github.event.comment.body, '/deploy-all') || contains(github.event.comment.body, '/deploy-shared-services') || github.event_name != 'issue_comment'           
        run: |
            cp -rs ${GITHUB_WORKSPACE}/* /tf/caf && cp -r ${GITHUB_WORKSPACE}/.devcontainer /tf/caf/            
            cd /tf/caf/enterprise_scale/construction_sets/aks
            ./scripts/deploy_level_with_rover.sh 2_shared_services level2

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.15'        

      - name: Test
        if: contains(github.event.comment.body, '/deploy-all') || contains(github.event.comment.body, '/deploy-shared-services') || github.event_name != 'issue_comment'           
        run: |
            cd /tf/caf/enterprise_scale/construction_sets/aks/test
            ./run_test.sh level2_shared_services/level2_shared_services_test.go
        env:
           TF_VAR_client_id: ${{ secrets.SERVICE_PRINCIPAL }}
           TF_VAR_client_secret: ${{ secrets.SERVICE_PRINCIPAL_PWD }}

  deploy-networking: 
    runs-on: ubuntu-latest
    needs: deploy-shared-services
    container:
      image:  aztfmod/rover:0.14.8-2103.1601
      options: --user 0
    steps:
      - name: Checkout Repository
        if: contains(github.event.comment.body, '/deploy-all') || contains(github.event.comment.body, '/deploy-networking') || github.event_name != 'issue_comment'      
        uses: actions/checkout@v2
      - name: Checkout PR code
        if: contains(github.event.comment.body, '/deploy-all') || contains(github.event.comment.body, '/deploy-networking')
        run: |
          git fetch origin ${{ env.event_sha }}
          git checkout FETCH_HEAD

      - name: Azure Login
        if: contains(github.event.comment.body, '/deploy-all') || contains(github.event.comment.body, '/deploy-networking') || github.event_name != 'issue_comment'     
        uses: azure/login@v1
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}

      - name: Deploy
        if: contains(github.event.comment.body, '/deploy-all') || contains(github.event.comment.body, '/deploy-networking') || github.event_name != 'issue_comment'           
        run: |
            cp -rs ${GITHUB_WORKSPACE}/* /tf/caf && cp -r ${GITHUB_WORKSPACE}/.devcontainer /tf/caf/            
            cd /tf/caf/enterprise_scale/construction_sets/aks
            ./scripts/deploy_level_with_rover.sh 2_networking level2

      - name: Test
        if: contains(github.event.comment.body, '/deploy-all') || contains(github.event.comment.body, '/deploy-networking') || github.event_name != 'issue_comment'           
        run: |
            echo "Invoke integration test"


  deploy-aks: 
    runs-on: ubuntu-latest
    needs: deploy-networking
    container:
      image:  aztfmod/rover:0.14.8-2103.1601
      options: --user 0
    steps:
      - name: Checkout Repository
        if: contains(github.event.comment.body, '/deploy-all') || contains(github.event.comment.body, '/deploy-aks') || github.event_name != 'issue_comment'      
        uses: actions/checkout@v2
      - name: Checkout PR code
        if: contains(github.event.comment.body, '/deploy-all') || contains(github.event.comment.body, '/deploy-aks')
        run: |
          git fetch origin ${{ env.event_sha }}
          git checkout FETCH_HEAD

      - name: Azure Login
        if: contains(github.event.comment.body, '/deploy-all') || contains(github.event.comment.body, '/deploy-aks') || github.event_name != 'issue_comment'     
        uses: azure/login@v1
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}

      - name: Deploy
        if: contains(github.event.comment.body, '/deploy-all') || contains(github.event.comment.body, '/deploy-aks') || github.event_name != 'issue_comment'           
        run: |
            cp -rs ${GITHUB_WORKSPACE}/* /tf/caf && cp -r ${GITHUB_WORKSPACE}/.devcontainer /tf/caf/            
            cd /tf/caf/enterprise_scale/construction_sets/aks
            ./scripts/deploy_level_with_rover.sh 3_aks level3
            echo $(terraform output -json | jq -r .aks_clusters_kubeconfig.value.cluster_re1.aks_kubeconfig_admin_cmd) | bash

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.15'        

      - name: Test
        if: contains(github.event.comment.body, '/deploy-all') || contains(github.event.comment.body, '/deploy-aks') || github.event_name != 'issue_comment'           
        run: |
            cd /tf/caf/enterprise_scale/construction_sets/aks/test
            ./run_test.sh level3_aks/level3_aks_test.go
            ./run_test.sh level3_aks/level3_aks_infra_conf_test.go
        env:
          KUBECONFIGPATH: ~/.kube/config
          #  TF_VAR_client_id: ${{ secrets.SERVICE_PRINCIPAL }}
          #  TF_VAR_client_secret: ${{ secrets.SERVICE_PRINCIPAL_PWD }}
           


